// Reverse a doubly linked list
/*
https://www.geeksforgeeks.org/problems/reverse-a-doubly-linked-list/1?utm_source=geeksforgeeks&utm_medium=article_practice_tab&utm_campaign=article_practice_tab
*/

class Solution
{
    public:
    Node* reverseDLL(Node * head)
    {
        //Your code here
        Node* curr = head;
        Node* temp = NULL;
        
        while (curr != NULL) {
            temp = curr->prev;
            curr->prev = curr->next;
            curr->next = temp;
            curr = curr->prev; // Move to the next node
        }
        
        // Update head to the last node which is the new head
        if (temp != NULL) {
            head = temp->prev;
        }
        
        return head;
    }
};
