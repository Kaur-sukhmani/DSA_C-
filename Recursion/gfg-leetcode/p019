// Subset Sums
// https://www.geeksforgeeks.org/problems/subset-sums2234/1
//{ Driver Code Starts
#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution
{
public:
    void Solve(vector<int>& arr, int N, vector<int>& output, int index, vector<int>& ans){
        if(index==N){
            int sum = 0;
            for(int i = 0; i < output.size(); i++){
                sum += output[i];
            }
            ans.push_back(sum);
            return ;
        }
        // exclude
        Solve(arr,N,output,index+1,ans);
        
        // include
        int element = arr[index];
        output.push_back(element);
        Solve(arr,N,output,index+1,ans);
        output.pop_back();
}
    vector<int> subsetSums(vector<int> arr, int N)
    {
        // Write Your Code here
        vector<int > ans;
        vector<int> output;
        int index=0;
        Solve(arr,N,output,index,ans);
        return ans;
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int N;
        cin>>N;
        vector<int> arr(N);
        for(int i = 0 ; i < N ; i++){
            cin >> arr[i];
        }
        Solution ob;
        vector<int> ans = ob.subsetSums(arr,N);
        sort(ans.begin(),ans.end());
        for(auto sum : ans){
            cout<< sum<<" ";
        }
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends
