// Subsets
// https://leetcode.com/problems/subsets/description/
#include <iostream>
#include <vector>

using namespace std;

class Solution {
private:
    void solve(vector<int> nums,vector<int> output,int index,vector<vector<int>>&ans){
        // base case
        if(index>=nums.size()){
            ans.push_back(output);
            return ;
        }

        //exclude
        solve(nums,output,index+1,ans);

        // include
        int element=nums[index];
        output.push_back(element);

        // func calls
        solve(nums,output,index+1,ans);
    }
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> output;
        int index=0;
        solve(nums,output,index,ans);
        return ans;
    }
};

int main() {
    Solution solution;
    vector<int> nums = {1, 2, 3};
    vector<vector<int>> subsets = solution.subsets(nums);

    // Print the subsets
    cout << "Subsets:" << endl;
    for (const auto& subset : subsets) {
        cout << "[";
        for (int num : subset) {
            cout << num << " ";
        }
        cout << "]" << endl;
    }

    return 0;
}
