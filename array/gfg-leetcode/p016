// sort 0,1,2
// https://leetcode.com/problems/sort-colors/

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class Solution {
public:
    void sortColors(vector<int>& nums) {
       vector<int> count(3, 0);
      // Count each number
       for (int i = 0; i < nums.size(); i++) {
            int num = nums[i];  // Get the current number
            count[num]++;       // Increment the count for this number
        }
        // Reconstruct the nums array
       int k =0;
       for(int i=0;i<count.size();i++){
           int j = count[i];
           while(j>0){
               nums[k]=i;
               k++;
               j--;
           }
       }
    }
};
// another solution
class Solution1 {
public:
    void sortColors(vector<int>& nums) {
        int n=nums.size();
        int low=0;
        int mid=0;
        int high=n-1;
        while(mid<=high){
            if(nums[mid]==0){
                swap(nums[low],nums[mid]);            
                low++;
                mid++;
            }
            else if(nums[mid]==1){
                mid++;
            }
            else{
                swap(nums[mid],nums[high]);
                high--;
            }
        
        }
    }
};
