//Minimize the Heights II
// https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1
// Input:
// K = 2, N = 4
// Arr[] = {1, 5, 8, 10}
// Output:
// 5
// Explanation:
// The array can be modified as 
// {1+k, 5-k, 8-k, 10-k} = {3, 3, 6, 8}. 
// The difference between 
// the largest and the smallest is 8-3 = 5.
#include <iostream>
#include <vector>
#include <climits> // For INT_MAX

using namespace std;

class Solution {
  public:
    int getMinDiff(int arr[], int n, int k) {
        // code here
        int arr1[n];
        int mini=0;
        int maxi=INT_MAX;
        int result=0;
        for(int i=0;i<n;i++){
            if(arr[i]<k){
                arr1[i]=arr[i]+k;
            }
            else{
                arr1[i]=arr[i]-k;
            }
        }
        for(int i=0;i<n;i++){
            mini=min(arr1[i],mini);
        }
        for(int j=0;j<n;j++){
            maxi=max(arr1[j],maxi);
        }
        result=maxi-mini;
        return result;
    }
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int k, n;
        cin >> k >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.getMinDiff(arr, n, k);
        cout << ans << "\n";
    }
    return 0;
}

