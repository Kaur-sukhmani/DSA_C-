// kth smallest number again 
// https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/kth-smallest-number-again-2/
#include <iostream>
#include <vector>
#include <algorithm> // Needed for sort
using namespace std;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, q;
        cin >> n >> q;
        vector<pair<int, int>> v;
        for (int i = 0; i < n; i++) {
            int x, y;
            cin >> x >> y;
            v.push_back({x, y});
        }
        sort(v.begin(), v.end());
        int idx = 0;
        for (int i = 1; i < n; i++) { // Start from 1 as 0th element is already in v[idx]
            if (v[idx].second >= v[i].first) {
                v[idx].second = max(v[i].second, v[idx].second);
            } else {
                idx++;
                v[idx] = v[i];
            }
        }
        while (q--) {
            int k;
            cin >> k;
            int ans = -1;
            for (int i = 0; i <= idx; i++) { // Loop should include idx
                if ((v[i].second - v[i].first + 1) >= k) {
                    ans = v[i].first + k - 1;
                    break; // Break after finding the answer
                }
                k -= (v[i].second - v[i].first + 1); // Correctly update k
            }
            cout << ans << endl;
        }
    }
    return 0;
}
